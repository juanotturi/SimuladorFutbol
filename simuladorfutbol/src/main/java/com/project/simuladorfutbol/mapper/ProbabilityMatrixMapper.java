package com.project.simuladorfutbol.mapper;

import com.project.simuladorfutbol.model.ProbabilityMatrix;

import java.util.HashMap;
import java.util.Map;

public class ProbabilityMatrixMapper {

    public static ProbabilityMatrix createMatrix() {

        Map<Integer, Map<Integer, Integer>> matrix = new HashMap<>();

        Map<Integer, Integer> rowA100 = new HashMap<>();
        rowA100.put(100, 0);
        rowA100.put(83, 2);
        rowA100.put(78, 4);
        rowA100.put(76, 6);
        rowA100.put(74, 8);
        rowA100.put(72, 9);
        rowA100.put(70, 11);
        rowA100.put(67, 12);
        rowA100.put(64, 13);
        rowA100.put(61, 14);
        rowA100.put(58, 15);
        rowA100.put(55, 16);
        rowA100.put(52, 17);
        rowA100.put(49, 17);
        rowA100.put(46, 17);
        rowA100.put(43, 17);
        rowA100.put(40, 17);
        rowA100.put(37, 17);
        matrix.put(100, rowA100);

        Map<Integer, Integer> rowA83 = new HashMap<>();
        rowA83.put(100, -2);
        rowA83.put(83, 0);
        rowA83.put(78, 2);
        rowA83.put(76, 4);
        rowA83.put(74, 6);
        rowA83.put(72, 8);
        rowA83.put(70, 10);
        rowA83.put(67, 11);
        rowA83.put(64, 12);
        rowA83.put(61, 13);
        rowA83.put(58, 15);
        rowA83.put(55, 16);
        rowA83.put(52, 17);
        rowA83.put(49, 17);
        rowA83.put(46, 17);
        rowA83.put(43, 17);
        rowA83.put(40, 17);
        rowA83.put(37, 17);
        matrix.put(83, rowA83);

        Map<Integer, Integer> rowA78 = new HashMap<>();
        rowA78.put(100, -4);
        rowA78.put(83, -2);
        rowA78.put(78, 0);
        rowA78.put(76, 2);
        rowA78.put(74, 4);
        rowA78.put(72, 6);
        rowA78.put(70, 8);
        rowA78.put(67, 10);
        rowA78.put(64, 12);
        rowA78.put(61, 13);
        rowA78.put(58, 14);
        rowA78.put(55, 15);
        rowA78.put(52, 16);
        rowA78.put(49, 17);
        rowA78.put(46, 17);
        rowA78.put(43, 17);
        rowA78.put(40, 17);
        rowA78.put(37, 17);
        matrix.put(78, rowA78);

        Map<Integer, Integer> rowA76 = new HashMap<>();
        rowA76.put(100, -6);
        rowA76.put(83, -4);
        rowA76.put(78, -2);
        rowA76.put(76, 0);
        rowA76.put(74, 2);
        rowA76.put(72, 4);
        rowA76.put(70, 6);
        rowA76.put(67, 8);
        rowA76.put(64, 10);
        rowA76.put(61, 12);
        rowA76.put(58, 14);
        rowA76.put(55, 15);
        rowA76.put(52, 16);
        rowA76.put(49, 16);
        rowA76.put(46, 17);
        rowA76.put(43, 17);
        rowA76.put(40, 17);
        rowA76.put(37, 17);
        matrix.put(76, rowA76);

        Map<Integer, Integer> rowA74 = new HashMap<>();
        rowA74.put(100, -8);
        rowA74.put(83, -6);
        rowA74.put(78, -4);
        rowA74.put(76, -2);
        rowA74.put(74, 0);
        rowA74.put(72, 4);
        rowA74.put(70, 6);
        rowA74.put(67, 8);
        rowA74.put(64, 10);
        rowA74.put(61, 12);
        rowA74.put(58, 14);
        rowA74.put(55, 15);
        rowA74.put(52, 16);
        rowA74.put(49, 16);
        rowA74.put(46, 17);
        rowA74.put(43, 17);
        rowA74.put(40, 17);
        rowA74.put(37, 17);
        matrix.put(74, rowA74);

        Map<Integer, Integer> rowA72 = new HashMap<>();
        rowA72.put(100, -9);
        rowA72.put(83, -8);
        rowA72.put(78, -6);
        rowA72.put(76, -4);
        rowA72.put(74, -2);
        rowA72.put(72, 0);
        rowA72.put(70, 2);
        rowA72.put(67, 4);
        rowA72.put(64, 6);
        rowA72.put(61, 8);
        rowA72.put(58, 10);
        rowA72.put(55, 12);
        rowA72.put(52, 14);
        rowA72.put(49, 15);
        rowA72.put(46, 16);
        rowA72.put(43, 16);
        rowA72.put(40, 17);
        rowA72.put(37, 17);
        matrix.put(72, rowA72);

        Map<Integer, Integer> rowA70 = new HashMap<>();
        rowA70.put(100, -11);
        rowA70.put(83, -10);
        rowA70.put(78, -8);
        rowA70.put(76, -6);
        rowA70.put(74, -4);
        rowA70.put(72, -2);
        rowA70.put(70, 0);
        rowA70.put(67, 2);
        rowA70.put(64, 4);
        rowA70.put(61, 6);
        rowA70.put(58, 8);
        rowA70.put(55, 10);
        rowA70.put(52, 13);
        rowA70.put(49, 15);
        rowA70.put(46, 15);
        rowA70.put(43, 16);
        rowA70.put(40, 16);
        rowA70.put(37, 17);
        matrix.put(70, rowA70);

        Map<Integer, Integer> rowA67 = new HashMap<>();
        rowA67.put(100, -12);
        rowA67.put(83, -11);
        rowA67.put(78, -10);
        rowA67.put(76, -8);
        rowA67.put(74, -6);
        rowA67.put(72, -4);
        rowA67.put(70, -2);
        rowA67.put(67, 0);
        rowA67.put(64, 2);
        rowA67.put(61, 4);
        rowA67.put(58, 6);
        rowA67.put(55, 8);
        rowA67.put(52, 11);
        rowA67.put(49, 14);
        rowA67.put(46, 15);
        rowA67.put(43, 16);
        rowA67.put(40, 16);
        rowA67.put(37, 17);
        matrix.put(67, rowA67);

        Map<Integer, Integer> rowA64 = new HashMap<>();
        rowA64.put(100, -13);
        rowA64.put(83, -12);
        rowA64.put(78, -12);
        rowA64.put(76, -10);
        rowA64.put(74, -8);
        rowA64.put(72, -6);
        rowA64.put(70, -4);
        rowA64.put(67, -2);
        rowA64.put(64, 0);
        rowA64.put(61, 2);
        rowA64.put(58, 4);
        rowA64.put(55, 6);
        rowA64.put(52, 10);
        rowA64.put(49, 12);
        rowA64.put(46, 14);
        rowA64.put(43, 15);
        rowA64.put(40, 16);
        rowA64.put(37, 16);
        matrix.put(64, rowA64);

        Map<Integer, Integer> rowA61 = new HashMap<>();
        rowA61.put(100, -14);
        rowA61.put(83, -13);
        rowA61.put(78, -13);
        rowA61.put(76, -12);
        rowA61.put(74, -10);
        rowA61.put(72, -8);
        rowA61.put(70, -6);
        rowA61.put(67, -4);
        rowA61.put(64, -2);
        rowA61.put(61, 0);
        rowA61.put(58, 2);
        rowA61.put(55, 4);
        rowA61.put(52, 8);
        rowA61.put(49, 10);
        rowA61.put(46, 14);
        rowA61.put(43, 15);
        rowA61.put(40, 16);
        rowA61.put(37, 16);
        matrix.put(61, rowA61);

        Map<Integer, Integer> rowA58 = new HashMap<>();
        rowA58.put(100, -15);
        rowA58.put(83, -15);
        rowA58.put(78, -14);
        rowA58.put(76, -14);
        rowA58.put(74, -12);
        rowA58.put(72, -10);
        rowA58.put(70, -8);
        rowA58.put(67, -6);
        rowA58.put(64, -4);
        rowA58.put(61, -2);
        rowA58.put(58, 0);
        rowA58.put(55, 2);
        rowA58.put(52, 6);
        rowA58.put(49, 8);
        rowA58.put(46, 12);
        rowA58.put(43, 14);
        rowA58.put(40, 15);
        rowA58.put(37, 16);
        matrix.put(58, rowA58);

        Map<Integer, Integer> rowA55 = new HashMap<>();
        rowA55.put(100, -16);
        rowA55.put(83, -16);
        rowA55.put(78, -15);
        rowA55.put(76, -15);
        rowA55.put(74, -14);
        rowA55.put(72, -12);
        rowA55.put(70, -10);
        rowA55.put(67, -8);
        rowA55.put(64, -6);
        rowA55.put(61, -4);
        rowA55.put(58, -2);
        rowA55.put(55, 0);
        rowA55.put(52, 3);
        rowA55.put(49, 6);
        rowA55.put(46, 10);
        rowA55.put(43, 14);
        rowA55.put(40, 15);
        rowA55.put(37, 15);
        matrix.put(55, rowA55);

        Map<Integer, Integer> rowA52 = new HashMap<>();
        rowA52.put(100, -17);
        rowA52.put(83, -17);
        rowA52.put(78, -16);
        rowA52.put(76, -16);
        rowA52.put(74, -15);
        rowA52.put(72, -14);
        rowA52.put(70, -13);
        rowA52.put(67, -11);
        rowA52.put(64, -10);
        rowA52.put(61, -8);
        rowA52.put(58, -6);
        rowA52.put(55, -3);
        rowA52.put(52, 0);
        rowA52.put(49, 3);
        rowA52.put(46, 7);
        rowA52.put(43, 12);
        rowA52.put(40, 14);
        rowA52.put(37, 15);
        matrix.put(52, rowA52);

        Map<Integer, Integer> rowA49 = new HashMap<>();
        rowA49.put(100, -17);
        rowA49.put(83, -17);
        rowA49.put(78, -17);
        rowA49.put(76, -16);
        rowA49.put(74, -16);
        rowA49.put(72, -15);
        rowA49.put(70, -15);
        rowA49.put(67, -14);
        rowA49.put(64, -12);
        rowA49.put(61, -10);
        rowA49.put(58, -8);
        rowA49.put(55, -6);
        rowA49.put(52, -3);
        rowA49.put(49, 0);
        rowA49.put(46, 3);
        rowA49.put(43, 8);
        rowA49.put(40, 12);
        rowA49.put(37, 14);
        matrix.put(49, rowA49);

        Map<Integer, Integer> rowA46 = new HashMap<>();
        rowA46.put(100, -17);
        rowA46.put(83, -17);
        rowA46.put(78, -17);
        rowA46.put(76, -17);
        rowA46.put(74, -16);
        rowA46.put(72, -16);
        rowA46.put(70, -15);
        rowA46.put(67, -15);
        rowA46.put(64, -14);
        rowA46.put(61, -14);
        rowA46.put(58, -12);
        rowA46.put(55, -10);
        rowA46.put(52, -7);
        rowA46.put(49, -3);
        rowA46.put(46, 0);
        rowA46.put(43, 4);
        rowA46.put(40, 8);
        rowA46.put(37, 12);
        matrix.put(46, rowA46);

        Map<Integer, Integer> rowA43 = new HashMap<>();
        rowA43.put(100, -17);
        rowA43.put(83, -17);
        rowA43.put(78, -17);
        rowA43.put(76, -17);
        rowA43.put(74, -17);
        rowA43.put(72, -16);
        rowA43.put(70, -16);
        rowA43.put(67, -16);
        rowA43.put(64, -15);
        rowA43.put(61, -15);
        rowA43.put(58, -14);
        rowA43.put(55, -14);
        rowA43.put(52, -12);
        rowA43.put(49, -8);
        rowA43.put(46, -4);
        rowA43.put(43, 0);
        rowA43.put(40, 4);
        rowA43.put(37, 8);
        matrix.put(43, rowA43);

        Map<Integer, Integer> rowA40 = new HashMap<>();
        rowA40.put(100, -17);
        rowA40.put(83, -17);
        rowA40.put(78, -17);
        rowA40.put(76, -17);
        rowA40.put(74, -17);
        rowA40.put(72, -17);
        rowA40.put(70, -16);
        rowA40.put(67, -16);
        rowA40.put(64, -16);
        rowA40.put(61, -16);
        rowA40.put(58, -15);
        rowA40.put(55, -15);
        rowA40.put(52, -14);
        rowA40.put(49, -12);
        rowA40.put(46, -8);
        rowA40.put(43, -4);
        rowA40.put(40, 0);
        rowA40.put(37, 4);
        matrix.put(40, rowA40);

        Map<Integer, Integer> rowA37 = new HashMap<>();
        rowA37.put(100, -17);
        rowA37.put(83, -17);
        rowA37.put(78, -17);
        rowA37.put(76, -17);
        rowA37.put(74, -17);
        rowA37.put(72, -17);
        rowA37.put(70, -17);
        rowA37.put(67, -17);
        rowA37.put(64, -16);
        rowA37.put(61, -16);
        rowA37.put(58, -16);
        rowA37.put(55, -15);
        rowA37.put(52, -15);
        rowA37.put(49, -14);
        rowA37.put(46, -12);
        rowA37.put(43, -8);
        rowA37.put(40, -4);
        rowA37.put(37, 0);
        matrix.put(37, rowA37);

        return new ProbabilityMatrix(matrix);
    }
}
